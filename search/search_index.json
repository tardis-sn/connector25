{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"TARDIS Connector","text":"<p>The TARDIS Connector is an end-to-end pipeline for simulating stripped envelope core-collapse supernovae.</p>"},{"location":"installation/","title":"Connector","text":""},{"location":"installation/#configuration-files","title":"Configuration files","text":"<p>Clone the repository https://github.com/tardis-sn/connector25 to your preferred  location.</p>"},{"location":"installation/#data-files","title":"Data files","text":"<p>Download from our Zenodo repository at XXXXXXXXXXXXXXXXXX</p>"},{"location":"installation/#mesa","title":"MESA","text":"<p>MESA is a versatile open-source 1D stellar evolution code. For the Connector 25 project, we install MESA version 24.08.1 and MESA SDK version 24.7.1/24.10.1/25.3.1 (Linux (Intel/AMD) / Mac OS (Intel) / Mac OS (ARM)) for bit-for-bit reproducibility.</p>"},{"location":"installation/#mesa-container","title":"MESA container","text":""},{"location":"installation/#build","title":"Build","text":"<p>We also provide a Docker definitions file to allow the production of a  containerized version of MESA using the versions described above.  To build the container, install Docker. Then download the zip for MESA version 24.08.1  and run the command <code>sudo docker build -f /path/to/mesa.dockerfile -t mesa-latest .</code>  in the same directory as <code>mesa-24.08.1.zip</code>.</p>"},{"location":"installation/#run-with-docker","title":"Run with Docker","text":"<p>To run the built container with Docker to check it has built correctly,  run <code>sudo docker run -it mesa-latest</code>. This will drop you into a bash prompt.  MESA is located in <code>/mesa-24.08.1</code> and the SDK in <code>/opt/mesadsk</code>.  Run <code>exit</code> to end the container. </p> <p>To use the container to run the MESA step of the Connector with Docker, you will need to bind your copy of the Connector repository to the container. Run the command <code>sudo docker run -v /path/to/connector25:/connector25-it  mesa-latest</code>.  Now the path <code>/connector25</code> within the container prompt will have access to your  local copy of the Connector repository.</p>"},{"location":"installation/#run-with-singularityapptainer","title":"Run with Singularity/Apptainer","text":"<p>To run the built container on an HPCC you will likely need to use  (Singularity)[https://docs.sylabs.io/guides/3.5/user-guide/introduction.html] or (Apptainer)[https://apptainer.org/docs/user/latest/] (these are basically  the same thing as of March 2025). </p> <p>Pull the container from DockerHub using the command  <code>singularity pull singularity pull docker://CONNECTORUSERNAME/mesa-connector:24.08.1</code>. Run the container using <code>singularity run mesa-connector_24.08.1.sif</code>. Singularity automatically mounts your home directory, so you can navigate to your clone of  the Connector repository within the container prompt.</p>"},{"location":"installation/#stella-container","title":"STELLA container","text":""},{"location":"installation/#run-with-docker_1","title":"Run with Docker","text":"<p>STELLA is part of the MESA container. </p>"},{"location":"installation/#stir","title":"STIR","text":"<p>STIR is only provided using our pre-built container.</p>"},{"location":"installation/#run-with-docker_2","title":"Run with Docker","text":"<p>Pull the container from DockerHub using the command  <code>docker pull CONNECTORUSERNAME/stir-connector:XXXXXXX</code>.</p> <p>To use the container to run the STIR step of the Connector with Docker, you will need to bind your copy of the Connector repository to the container. Run the command <code>sudo docker run -v /path/to/connector25:/connector25-it  stir-latest</code>.  Now the path <code>/connector25</code> within the container prompt will have access to your  local copy of the Connector repository.</p>"},{"location":"installation/#run-with-singularityapptainer_1","title":"Run with Singularity/Apptainer","text":"<p>To run the built container on an HPCC you will likely need to use  (Singularity)[https://docs.sylabs.io/guides/3.5/user-guide/introduction.html] or (Apptainer)[https://apptainer.org/docs/user/latest/] (these are basically the  same thing as of March 2025). </p> <p>Pull the container from DockerHub using the command  <code>singularity pull docker://CONNECTORUSERNAME/stir-connector:XXXXXX</code>. Run the container using <code>singularity run stir-connector-XXXXXX</code>. Singularity automatically mounts your home directory, so you can navigate to your clone of  the Connector repository within the container prompt.</p>"},{"location":"installation/#tardis","title":"TARDIS","text":"<p>Standard installation of TARDIS can be accomplished using our locked environment file, with instructions here.  The release of TARDIS used as part of the Connector is XXXX.</p>"},{"location":"installation/#tardis-container","title":"TARDIS container","text":""},{"location":"installation/#build_1","title":"Build","text":"<p>We also provide a Docker definitions file to allow the production of a  containerized version of TARDIS using the version described above.  To build the container, install Docker  and run the command <code>sudo docker build -f /path/to/tardis.dockerfile -t tardis-latest .</code>.</p>"},{"location":"installation/#run-with-docker_3","title":"Run with Docker","text":"<p>To run the built container with Docker to check it has built correctly,  run <code>sudo docker run -it tardis-latest</code>. This will drop you into a bash prompt.  TARDIS is located in <code>/tardis-release-XXXX</code>. Run <code>exit</code> to end the container.</p> <p>To use the container to run the TARDIS step of the Connector with Docker, you will need to bind your copy of the Connector repository to the container. Run the command <code>sudo docker run -v /path/to/connector25:/connector25-it  mesa-latest</code>.</p>"},{"location":"installation/#run-with-singularityapptainer_2","title":"Run with Singularity/Apptainer","text":"<p>To run the built container on an HPCC you will likely need to use  (Singularity)[https://docs.sylabs.io/guides/3.5/user-guide/introduction.html] or (Apptainer)[https://apptainer.org/docs/user/latest/] (these are basically the  same thing as of March 2025). </p> <p>Pull the container from DockerHub using the command  <code>singularity pull docker://CONNECTORUSERNAME/tardis-connector:XXXXXX</code>. Run the container using <code>singularity run tardis-connector-XXXXXX</code>. Singularity automatically mounts your home directory, so you can navigate to your clone of  the Connector repository within the container prompt.</p>"},{"location":"mesa_to_stir/","title":"MESA to STIR conversion","text":""},{"location":"mesa_to_stir/#inputs-to-mesa","title":"Inputs to MESA","text":"<p>MESA input consists of a <code>work</code> directory which includes project <code>inlists</code> (user configuration files), a <code>run_star_extras/</code> forlder for custom Fortran functions that hook into the MESA stellar evolution solve, and make/run/restart bash scripts. To carry out a MESA simulation locally on your laptop, compile with <code>./mk</code> and run with <code>./rn</code>.</p>"},{"location":"mesa_to_stir/#outputs-from-mesa","title":"Outputs from MESA","text":"<p>MESA outputs history and profile data in the <code>LOGS</code> directory in your <code>work</code> folder, photos for restarting the simulation, and images (optional).</p>"},{"location":"mesa_to_stir/#inputs-to-stir","title":"Inputs to STIR","text":""},{"location":"mesa_to_stir/#conversion-from-mesa-to-stir","title":"Conversion from MESA to STIR","text":"<p>To convert the MESA output to STIR input, ...</p>"},{"location":"mesa_to_stir/#outputs-from-stir","title":"Outputs from STIR","text":""},{"location":"running_on_hpcc/","title":"Running the Connector on SLURM HPCC","text":"<p>Follow the instructions in the installation guide, checking that the containers run using the Singularity or Apptainer system on your HPCC. Make sure you login using X-Window forwarding.</p>"},{"location":"running_on_hpcc/#mesa","title":"MESA","text":"<p><code>salloc -n 16 -t 8:00:00 --x11</code> will request 16 CPUs for 8 hours including an X11 binding so you can inspect the simulation as it runs. Once your job launches, you can run the container. Once in the container, <code>cd</code> to  <code>connector25/mesa-connector/template_binary_dev</code>. Run <code>./mk</code> then <code>./rn</code>. You should see MESA begin to compute the evolution. The X-window based plots should also begin to display after some time.</p>"},{"location":"running_on_hpcc/#stir","title":"STIR","text":""},{"location":"running_on_hpcc/#mesa-stella","title":"MESA + STELLA","text":"<p><code>salloc -n 16 -t 8:00:00 --x11</code> will request 16 CPUs for 8 hours including an X11 binding so you can inspect the simulation as it runs. Once your job launches, you can run the container. Once in the container, <code>cd</code> to  <code>connector25/mesa-connector/stella</code>. Run XXX then XXX. You should see MESA begin to compute the evolution. The X-window based plots should also begin to display after some time.</p>"},{"location":"running_on_hpcc/#tardis","title":"TARDIS","text":"<p><code>salloc -n 32 -t 1:00:00</code> will request 32 CPUs for 1 hour. Once your job launches, you can run the container. Once in the container, <code>cd</code> to  <code>connector25/tardis-connector/</code>. Run <code>conda activate tardis</code> then <code>ipython tardis_run.py</code>. You should see a progress bar and text log output.</p>"},{"location":"stella_to_tardis/","title":"STELLA to TARDIS conversion","text":""},{"location":"stella_to_tardis/#outputs-from-stella","title":"Outputs from STELLA","text":""},{"location":"stella_to_tardis/#conversion-to-tardis","title":"Conversion to TARDIS","text":"<p>The STELLA output files XXXXX are ingested by the script XXXXXX.py and converted into the required TARDIS inputs, a configuration YAML file and a CSVY file that includes the 1D profiles.</p>"},{"location":"stella_to_tardis/#inputs-to-tardis","title":"Inputs to TARDIS","text":"<ul> <li>TARDIS configuration options: YAML file</li> <li>Density, velocity and composition profiles: CSVY file</li> <li>Atomic data: HDF file</li> </ul> <p>To modify TARDIS inputs, make changes to the variables located at the top of the file XXXXXX.py.</p>"},{"location":"stir_to_stella/","title":"STIR to STELLA conversion","text":""},{"location":"stir_to_stella/#inputs-to-stir","title":"Inputs to STIR","text":""},{"location":"stir_to_stella/#outputs-from-stir","title":"Outputs from STIR","text":""},{"location":"stir_to_stella/#inputs-to-stella","title":"Inputs to STELLA","text":"<p>A simplified version of the STELLA code is packaged in MESA in <code>$MESA_DIR/stella/</code>. STELLA is a 1D multi-group (frequency-dependent) Radiation- Hydrodynamics code which is useful for modeling bolometric lightcurves and other observables for core-collapse supernovae.</p> <p>STELLA takes a <code>mesa.hyd</code> (contains hydrodynamic data) and <code>mesa.abd</code> (contains abundance data) file as input.</p> <p>To run STELLA, go to your STELLA folder <code>cd $MESA_DIR/stella</code> and make sure the input files (<code>mesa.hyd</code> and <code>mesa.abd</code>) are placed in <code>stella/modmake/</code>. From the stella directory, run just like in MESA, via the command <code>./rn</code></p>"},{"location":"stir_to_stella/#conversion-from-stir-to-stella","title":"Conversion from STIR to STELLA","text":"<p>To convert the STIR output to STELLA input, ...</p>"},{"location":"stir_to_stella/#outputs-from-stella","title":"Outputs from STELLA","text":"<p>Output is contained in <code>stella/res/</code>. This includes a <code>mesa.lbol</code> lightcurve file, among others.</p>"}]}